#!/bin/sh

die() { echo $@ >&2 ; exit 1 ; }

LN="ln -s -v --backup=numbered"
cd `dirname $0`
CWD=`pwd`
export LANG=C

if echo "$@" | grep -qwe '-f' ; then
  echo -n 'Sure to force-install? [y/n]'
  read ans
  if test "$ans" != "y" ; then
    exit 1
  fi
  F=y
else
  F=n
fi

link() {
	local what=$1
	local where=$2

  if test $F = n ; then
    if test -f "$where" ; then
      echo "File $where already exists, use -f to overwrite"
      return 1
    fi
  else
		mv "$where" "$where.local" ||
			die "Unable to backup $where"
  fi

	$LN $what $where
}

copy() {
	local what=$1
	local where=$2
  local d=`dirname $where`

  if test $F = n ; then
    if test -f $where ; then
      echo "File $where already exists, use -f to overwrite"
      return 1
    fi
  else
		mv "$where" "$where.local" ||
			die "Unable to backup $where"
  fi

  if ! test -d "$d" ; then
    mkdir -p "$d" || return 2;
  fi

  cp --verbose $what $where
}

if ! bash -e "$CWD/bash/bash_profile" ; then
  die "Looks like bash_profile is not working; aborting"
fi

if which xrdb >/dev/null ; then
if ! xrdb -load $CWD/X/Xresources ; then
  die "Looks like Xresources can't be loaded; aborting"
fi
fi

link $CWD/bash/bash_profile ~/.bash_profile
link $CWD/vim/vimrc ~/.vimrc
link $CWD/vimperator/vimperatorrc ~/.vimperatorrc
link $CWD/mutt/muttrc ~/.muttrc
link $CWD/X/Xresources ~/.Xresources
link $CWD/screen/screenrc ~/.screenrc

copy $CWD/ssh/config ~/.ssh/config
for k in $CWD/ssh/*pub ; do
  copy $k ~/.ssh/`basename $k`
done


